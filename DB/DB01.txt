-- DataBase : 데이터를 저장하는 객체 또는 관계들의 집합

-- SQL(Query)문장
	1) 쿼리문은 대소문자를 구별하지 않는다.
	2) 한줄 또는 여러줄에 걸쳐 입력하는것이 가능하다.
	3) 문장의 끝은 항상 " ; "으로 종료

-- SQL 문장의 종류
	1) DML( Data Manipulation Language ) : 데이터 조작어
	 --select, insert, update, delete....
	 --4대 쿼리: C : Create
		    R : Read
		    U : Update
		    D : Delete
	2) DDL( Data Definition Language ) : 데이터 정의어
	 -- create, alter, drop.....
	3) DCL( Data Control Languagr ) : 데이터 제어어
	 --grant, revoke...


1-1. SELECT문 : DB에 저장되어 있는 자원들을 검색(조회)할 때 사용하는 문장

예) employees(사원)테이블의 모든 정보를 조회하시오
select * from employees;

예) departments(부서) 테이블의 모든 정보를 조회하시오
select *(모든정보(컬럼)을 다 불러오는 코드) from departments;

예) 사원테이블에서 fist_name(이름), job_id(직종), salary(급여)를 조회하시오
select first_name,job_id,salary form employees;

문) 사원테이블에서 사번, 이름, 입사일, 급여를 검색하시오
SELECT employee_id, first_name, hire_date, salary
FROM employees;

예) 사원테이블에서 사번, 이름, 급여, 보너스
SELECT employee_id, first_name, salary, commission_pct pct, salary*commission_pct AS comm
FROM employees;
(한칸을 뛰거나 AS를 입력해서 별칭을 만들수 있음)
1-2 조건절(where)
 - 사용자가 원하는 자원을 검색할때 조건을 통해 결과를 간추릴 수 있다.

예) 사원테이블에서 급여가 10000 이상인 사원들의 정보를 사번, 이름, 급여순으로 출력하시오
SELECT employee_id, first_name, salary FROM employees WHERE salary > 10000;

예) 사원테이블에서 이름이 Michael인 사원의 사번, 이름을 조회하시오.
SELECT employee_id, first_name FROM employees WHERE first_name = 'Michael'; 
(where 를 사용하여 검색하는 조건문에는 대소문자 구별이 필요하다)

문) 사원테이블에서 직종이 IT_PROG인 사원들의 정보를 사번, 이름, 직종, 급여순으로 출력
SELECT employee_id, first_name, job_id, salary FROM employees WHERE job_id = 'IT_PROG';

예) 사원테이블에서 급여가 10000이상 이면서 13000이하인 사원들의 정보를 이름, 급여 순으로 출력하시오
SELECT first_name, salary FROM employees WHERE salary>= 10000 AND salary <=13000; 

문) 사원테이블에서 직종이 SA_MAN이거나 IT_PROG인 사원들의 사번, 이름, 직종을 조회하시오
SELECT employee_id, first_name, job_id FROM employees WHERE job_id='SA_MAN' or job_id='IT_PROG';

2.SQL연산자

1) BETWEEN연산자 : A와 B사이의 값을 검색할 때 사용
2) IN연산자 : 주어진 목록에서 찾고자 하는 값을 명확히 검색하고자 할때
3) LIKE연산자 : 검색하고자 하는 값과 일치하는, 혹은 포함하고 있는 자원을 검색할때 사용

2-1. BETWEEN 
BETWEEN연산자 : A와 B사이의 값을 검색할 때 사용

예) 급여가 5000이상이고 6000이하인 사원의 사번, 이름, 급여를 조회하시오
SELECT employee_id, first_name, salary
FROM employees
WHERE salary >=5000 and salary <= 6000;

SELECT employee_id, first_name, salary
FROM employees
WHERE salary BETWEEN 5000 and 6000;

예)2005년도에 입사한 사원들의 정보를 이름, 입사일 순으로 출력
SELECT first_name, hire_date 
FROM employees
WHERE hire_date BETWEEN '01/01/2005' and '12/31/2005';

2-2.IN
IN연산자 : 주어진 목록에서 찾고자 하는 값을 명확히 검색하고자 할때

예) 급여가 2200, 3200, 5000을 받는 사원들의 정보를 사번, 이름, 급여순으로 조회

SELECT employee_id,first_name,salary
FROM employees
WHERE salary IN(2200,3200,5000);

2-3. LIKE(유사검색)
LIKE연산자 : 검색하고자 하는 값과 일치하는, 혹은 포함하고 있는 자원을 검색할때 사용
1) % : 모든 값
2) _ : 하나의 값

'M%' : M으로 시작하는 모든 값
'%a' : a로 끝나는 모든 값

'___a' : 모든 값중에서 마지막 글자가 a인 4글자의 값
'M______' : M으로 시작하는 값들중, 전체길이가 7글자의 값

예) 이름이 M으로 시작하는 사원의 사번, 이름을 출력
SELECT employee_id, first_name
FROM employees
WHERE first_name LIKE 'M%';

문) 사원테이블에서 이름이 d로 끝나는 사원들의 사번 이름을 조회
SELECT employee_id, first_name
FROM employees
WHERE first_name LIKE '%d';

문) 사원테이블에서 이름의 세번째 글자가 a인 사원의 사번,이름을 조회

SELECT employee_id, first_name
FROM employees
WHERE first_name LIKE '__a%';

문) 이름이 H로 시작하면서 6글자이상인 사원들의 이름을출력하세요

SELECT first_name
FROM employees
WHERE first_name LIKE 'H_____%';

문) 이름에 소문자 o 가 포함되어 있으면서 a로 끝나는 사원들의 이름을 조회

SELECT first_name
FROM employees
WHERE first_name LIKE '%o%a';

2-4 NOT 연산자

예) 직종이 SA_MAN, IT_PROG가 아닌 사원들의 정보를 이름 직종 순으로 조회

SELECT first_name, job_id
FROM employees
WHERE job_id !='SA_MAN' and job !='IT_PROG'  ;

SELECT first_name, job_id
FROM employees
WHERE job_id NOT IN('SA_MAN','IT_PROG') ;

예) 사원들중 5000이상 6000이하의 급여를 받는 사원은 제외하고
이름과 급여를 조회하시오
SELECT first_name, salary
FROM employees
WHERE salary NOT BETWEEN 5000 and 6600;





